#!/bin/sh

if [ $(pgrep -cx bspwm_panel) -gt 1 ] ; then
    printf "%s\n" "The bspwm_panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

. bspwm_panel_config

bspc config top_padding $PANEL_HEIGHT

bspc control --subscribe > "$PANEL_FIFO" &
$HOME/.bin/xtitle/bin/xtitle -sf 'T%s' > "$PANEL_FIFO" &

panel_process()
{
    case $1 in
        100) echo "——————————%{F#FF000000}%{F${COLOR_FOREGROUND}}" ;;
     [0-9]) echo "%{F#FF0587a0}%——————————%{F${COLOR_FOREGROUND}}" ;;
        1*) echo "—%{F#FF000000}%—————————%{F${COLOR_FOREGROUND}}" ;;
        2*) echo "——%{F#FF000000}%————————%{F${COLOR_FOREGROUND}}" ;;
        3*) echo "———%{F#FF000000}%———————%{F${COLOR_FOREGROUND}}" ;;
        4*) echo "————%{F#FF000000}%——————%{F${COLOR_FOREGROUND}}" ;;
        5*) echo "—————%{F#FF000000}%—————%{F${COLOR_FOREGROUND}}" ;;
        6*) echo "——————%{F#FF000000}%————%{F${COLOR_FOREGROUND}}" ;;
        7*) echo "———————%{F#FF000000}%———%{F${COLOR_FOREGROUND}}" ;;
        8*) echo "————————%{F#FF000000}%——%{F${COLOR_FOREGROUND}}" ;;
        9*) echo "—————————%{F#FF000000}%—%{F${COLOR_FOREGROUND}}" ;;
    esac
}

panel_clock()
{
    echo $(date +'%a %d-%m-%y %H:%M:%S')
}

panel_use_ram()
{
    usage=$(free | grep Mem | awk '{print $3/$2 * 100.0}')
    echo $usage
}

panel_battery()
{
    echo 0
}

panel_cpu()
{
    echo "  5%%,  34%%,  100%%, 100%%"
}

while true; do
    echo "D" $(panel_clock) > "$PANEL_FIFO"
    echo "R" $(panel_process $(panel_use_ram)) > "$PANEL_FIFO"
    echo "B" $(panel_process $(panel_battery)) > "$PANEL_FIFO"
    echo "C" $(panel_cpu) > "$PANEL_FIFO"
    sleep 0.7s
done &

cat "$PANEL_FIFO" | \
bspwm_panel_bar | \
$HOME/.bin/bar/bin/bar \
    -g x$PANEL_HEIGHT \
    -F "$COLOR_FOREGROUND" \
    -B "$COLOR_BACKGROUND" \
    -f "-lucy-tewi-medium-r-normal--11-90-75-75-p-58-iso10646-1,-benis-uushi-medium-r-normal--11-90-75-75-p-58-iso10646-1" &
wait
